name: Javascript

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint_markdown_files:
    uses: optimizely/javascript-sdk/.github/workflows/lint_markdown.yml@uzair/gitactions

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 12
        cache-dependency-path: packages/optimizely-sdk/package-lock.json
        cache: 'npm'
    - name: Run linting
      working-directory: ./packages/optimizely-sdk
      run: |
        npm install
        npm run lint

  integration_tests:
    uses: optimizely/javascript-sdk/.github/workflows/integration_test.yml@uzair/gitactions
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}

  fullstack_production_suite:
    uses: optimizely/javascript-sdk/.github/workflows/integration_test.yml@uzair/gitactions
    with:
      FULLSTACK_TEST_REPO: ProdTesting
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}

  crossbrowser_and_umd_unit_tests:
    runs-on: ubuntu-latest
    env:
      BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
      BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Move to package
      run: |
        cd packages/optimizely-sdk
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 8
        cache: 'npm'
        cache-dependency-path: packages/optimizely-sdk/package-lock.json
    - name: Cross-browser and umd unit tests
      working-directory: ./packages/optimizely-sdk
      run: |
        npm install
        npm run test-ci

  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '8', '9', '10', '12', '14' ]
    steps:
    - uses: actions/checkout@v2
    - name: Move to package
      run: |
        cd packages/optimizely-sdk
    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
        cache-dependency-path: packages/optimizely-sdk/package-lock.json
    - name: Unit tests
      working-directory: ./packages/optimizely-sdk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRAVIS_COM_TOKEN: ${{ TRAVIS_COM_TOKEN }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      run: |
        npm install
        npm test
        npm run cover
        npm run coveralls
        
  test_sub_packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ 'packages/utils', 'packages/event-processor', 'packages/logging', 'packages/datafile-manager']
    steps:
    - uses: actions/checkout@v2
    - name: Move to package ${{ matrix.package }}
      run: |
        cd ${{ matrix.package }}
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 12
        cache: 'npm'
        cache-dependency-path: packages/${{ matrix.package }}/package-lock.json
    - name: Test sub packages
      working-directory: ./packages/${{ matrix.package }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRAVIS_COM_TOKEN: ${{ TRAVIS_COM_TOKEN }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      run: |
        npm install
        npm test
        npm run coveralls
