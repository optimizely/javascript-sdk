language: node_js
node_js:
- '8'
- '9'
- '10'
- '12'
- '14'
branches:
  only:
  - master
  - /^\d+\.\d+\.(\d|[x])
env:
  global:
    - SDK=javascript
    - SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
before_install: cd packages/optimizely-sdk
install: npm install
script: npm test
after_success: npm run coveralls

# Integration tests need to run first to reset the PR build status to pending
stages:
  - 'Source Clear'
  - 'Lint markdown files'
  - 'Lint'
  - 'Integration tests'
  - 'Full stack production tests'
  - 'Cross-browser and umd unit tests'
  - 'Test'
  - 'Test sub packages'

jobs:
  include:
    - stage: 'Lint markdown files'
      os: linux
      language: generic
      install: gem install awesome_bot
      script:
        - find . -type f -name '*.md' -exec awesome_bot {} \;
      notifications:
        email: false

    - stage: 'Lint'
      node_js: '12'
      script: npm run lint

    - &integrationtest
      stage: 'Integration tests'
      merge_mode: replace
      cache: false
      language: minimal
      before_install: skip
      install: skip
      before_script:
        - mkdir $HOME/travisci-tools && pushd $HOME/travisci-tools && git init && git pull https://$CI_USER_TOKEN@github.com/optimizely/travisci-tools.git && popd
      script:
        - CLIENT=node $HOME/travisci-tools/trigger-script-with-status-update.sh
        - CLIENT=browser $HOME/travisci-tools/trigger-script-with-status-update.sh
      after_success: travis_terminate 0

    - <<: *integrationtest
      stage: 'Full stack production tests'
      env:
        SDK=javascript
        SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
        FULLSTACK_TEST_REPO=ProdTesting
      script: $HOME/travisci-tools/trigger-script-with-status-update.sh

    - stage: Cross-browser and umd unit tests
      node_js: '8'
      script: npm run test-ci
    - &packagetest
      stage: 'Test sub packages'
      node_js: '12'
      before_install: cd packages/utils
    - <<: *packagetest
      before_install: cd packages/event-processor
    - <<: *packagetest
      before_install: cd packages/logging
    - <<: *packagetest
      before_install: cd packages/datafile-manager

    - stage: 'Source Clear'
      if: type = cron
      addons:
        srcclr: true
      before_install: cd packages/optimizely-sdk
      install: skip
      before_script: skip
      script: skip
      after_script: skip
      after_success: skip
